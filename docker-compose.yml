services:
  dev-env:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./projects:/home/devuser # Mount host project directory to /home/devuser 
    ports:
      - "${APP_PORT:-8080}:8080"
    networks:
      - dev-network
    stdin_open: true
    tty: true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ] # Replace with your app URL or command
      interval: 30s # Check every 30 seconds
      timeout: 10s # Timeout after 10 seconds
      retries: 3 # Mark unhealthy if fails 3 consecutive times
      start_period: 30s
    restart: unless-stopped

  mysql:
    image: mysql:8.0 # MySQL as a database service
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Root password for MySQL
      MYSQL_DATABASE: ${MYSQL_DATABASE} # A default database for the application
      MYSQL_USER: ${MYSQL_USER} # A non-root database user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD} # Password for the non-root user
    volumes:
      - mysql-data:/var/lib/mysql # Persist the MySQL database data
      - ./init-sql:/docker-entrypoint-initdb.d/
    ports:
      - "${MYSQL_PORT:-3306}:3306" # MySQL port forwarding from .env (default is 3306)
    networks:
      - dev-network
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h127.0.0.1 -uroot -p${MYSQL_ROOT_PASSWORD} --silent" ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  dev-network:
    # Custom isolated network for all services

volumes:
  mysql-data:
    # Persistent storage for MySQL

